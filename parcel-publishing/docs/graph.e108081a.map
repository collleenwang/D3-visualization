{"version":3,"sources":["graph.js"],"names":["margin","top","right","bottom","left","width","height","svg","d3","select","append","attr","xPositionScale","scaleLinear","domain","range","yPositionScale","colorScale","scaleOrdinal","csv","require","then","ready","datapoints","console","log","selectAll","data","enter","d","gdp_per_capita","life_expectancy","continent","on","i","nodes","text","country","style","yAxis","axisLeft","tickSize","ticks","call","lower","remove","xAxis","axisBottom"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAIA,SAAS;AACXC,OAAK,CADM;AAEXC,SAAO,EAFI;AAGXC,UAAQ,EAHG;AAIXC,QAAM;AAJK,CAAb;;AAOA,IAAIC,QAAQ,MAAML,OAAOI,IAAb,GAAoBJ,OAAOE,KAAvC;AACA,IAAII,SAAS,MAAMN,OAAOC,GAAb,GAAmBD,OAAOG,MAAvC;;AAEA;AACA,IAAII,MAAMC,GACPC,MADO,CACA,QADA,EAEPC,MAFO,CAEA,KAFA,EAGPC,IAHO,CAGF,OAHE,EAGON,QAAQL,OAAOI,IAAf,GAAsBJ,OAAOE,KAHpC,EAIPS,IAJO,CAIF,QAJE,EAIQL,SAASN,OAAOC,GAAhB,GAAsBD,OAAOG,MAJrC,EAKPO,MALO,CAKA,GALA,EAMPC,IANO,CAMF,WANE,EAMW,eAAeX,OAAOI,IAAtB,GAA6B,GAA7B,GAAmCJ,OAAOC,GAA1C,GAAgD,GAN3D,CAAV;;AAQA;AACA,IAAMW,iBAAiBJ,GACpBK,WADoB,GAEpBC,MAFoB,CAEb,CAAC,CAAD,EAAI,KAAJ,CAFa,EAGpBC,KAHoB,CAGd,CAAC,CAAD,EAAIV,KAAJ,CAHc,CAAvB;;AAKA,IAAMW,iBAAiBR,GACpBK,WADoB,GAEpBC,MAFoB,CAEb,CAAC,EAAD,EAAK,EAAL,CAFa,EAGpBC,KAHoB,CAGd,CAACT,MAAD,EAAS,CAAT,CAHc,CAAvB;;AAKA,IAAMW,aAAaT,GAChBU,YADgB,GAEhBH,KAFgB,CAEV,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CAFU,CAAnB;;AAIAP,GAAGW,GAAH,CAAOC,QAAQ,iBAAR,CAAP,EAAmCC,IAAnC,CAAwCC,KAAxC;;AAEA,SAASA,KAAT,CAAeC,UAAf,EAA2B;AACzBC,UAAQC,GAAR,CAAY,SAAZ,EAAuBF,UAAvB;;AAEAhB,MACGmB,SADH,CACa,QADb,EAEGC,IAFH,CAEQJ,UAFR,EAGGK,KAHH,GAIGlB,MAJH,CAIU,QAJV,EAKGC,IALH,CAKQ,GALR,EAKa,CALb,EAMGA,IANH,CAMQ,IANR,EAMc,aAAK;AACf,WAAOC,eAAeiB,EAAEC,cAAjB,CAAP;AACD,GARH,EASGnB,IATH,CASQ,IATR,EASc,aAAK;AACf,WAAOK,eAAea,EAAEE,eAAjB,CAAP;AACD,GAXH,EAYGpB,IAZH,CAYQ,MAZR,EAYgB,aAAK;AACjB,WAAOM,WAAWY,EAAEG,SAAb,CAAP;AACD,GAdH,EAeGC,EAfH,CAeM,WAfN,EAemB,UAACJ,CAAD,EAAGK,CAAH,EAAKC,KAAL,EAAe;AAC9B3B,OAAGC,MAAH,CAAU0B,MAAMD,CAAN,CAAV,EAAoBvB,IAApB,CAAyB,MAAzB,EAAiC,OAAjC;AACAH,OAAGC,MAAH,CAAU,OAAV,EAAmB2B,IAAnB,CAAwBP,EAAEQ,OAA1B;AACA7B,OAAGC,MAAH,CAAU,OAAV,EAAmB2B,IAAnB,CAAwBP,EAAEE,eAA1B;AACAvB,OAAGC,MAAH,CAAU,MAAV,EAAkB2B,IAAlB,CAAuBP,EAAEC,cAAzB;AACAtB,OAAGC,MAAH,CAAU,OAAV,EAAmB6B,KAAnB,CAAyB,SAAzB,EAAoC,OAApC;AACD,GArBH,EAsBGL,EAtBH,CAsBM,UAtBN,EAsBkB,UAASJ,CAAT,EAAY;AAC1BrB,OAAGC,MAAH,CAAU,IAAV,EAAgBE,IAAhB,CAAqB,MAArB,EAA6BM,WAAWY,EAAEG,SAAb,CAA7B;AACAxB,OAAGC,MAAH,CAAU,OAAV,EAAmB6B,KAAnB,CAAyB,SAAzB,EAAoC,MAApC;AACD,GAzBH;;AA2BA,MAAIC,QAAQ/B,GACTgC,QADS,CACAxB,cADA,EAETyB,QAFS,CAEA,CAACpC,KAFD,EAGTqC,KAHS,CAGH,CAHG,CAAZ;AAIAnC,MACGG,MADH,CACU,GADV,EAEGC,IAFH,CAEQ,OAFR,EAEiB,aAFjB,EAGGgC,IAHH,CAGQJ,KAHR,EAIGK,KAJH;;AAMApC,KAAGC,MAAH,CAAU,iBAAV,EAA6BoC,MAA7B;;AAEA,MAAIC,QAAQtC,GAAGuC,UAAH,CAAcnC,cAAd,EAA8B8B,KAA9B,CAAoC,CAApC,CAAZ;;AAEAnC,MACGG,MADH,CACU,GADV,EAEGC,IAFH,CAEQ,OAFR,EAEiB,aAFjB,EAGGA,IAHH,CAGQ,WAHR,EAGqB,iBAAiBL,MAAjB,GAA0B,GAH/C,EAIGqC,IAJH,CAIQG,KAJR;AAKD","file":"graph.e108081a.map","sourceRoot":"..","sourcesContent":["/* global d3 */\nvar margin = {\n  top: 0,\n  right: 20,\n  bottom: 30,\n  left: 20\n}\n\nvar width = 500 - margin.left - margin.right\nvar height = 400 - margin.top - margin.bottom\n\n// You'll probably need to edit this one\nvar svg = d3\n  .select('#chart')\n  .append('svg')\n  .attr('width', width + margin.left + margin.right)\n  .attr('height', height + margin.top + margin.bottom)\n  .append('g')\n  .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n// Here are some scales for you\nconst xPositionScale = d3\n  .scaleLinear()\n  .domain([0, 80000])\n  .range([0, width])\n\nconst yPositionScale = d3\n  .scaleLinear()\n  .domain([30, 85])\n  .range([height, 0])\n\nconst colorScale = d3\n  .scaleOrdinal()\n  .range(['#b2e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae'])\n\nd3.csv(require('./countries.csv')).then(ready)\n\nfunction ready(datapoints) {\n  console.log('Data is', datapoints)\n\n  svg\n    .selectAll('circle')\n    .data(datapoints)\n    .enter()\n    .append('circle')\n    .attr('r', 4)\n    .attr('cx', d => {\n      return xPositionScale(d.gdp_per_capita)\n    })\n    .attr('cy', d => {\n      return yPositionScale(d.life_expectancy)\n    })\n    .attr('fill', d => {\n      return colorScale(d.continent)\n    })\n    .on('mouseover', (d,i,nodes) => {\n      d3.select(nodes[i]).attr('fill', 'black')\n      d3.select('#name').text(d.country)\n      d3.select('#life').text(d.life_expectancy)\n      d3.select('#GDP').text(d.gdp_per_capita)\n      d3.select('#info').style('display', 'block')\n    })\n    .on('mouseout', function(d) {\n      d3.select(this).attr('fill', colorScale(d.continent))\n      d3.select('#info').style('display', 'none')\n    })\n\n  var yAxis = d3\n    .axisLeft(yPositionScale)\n    .tickSize(-width)\n    .ticks(5)\n  svg\n    .append('g')\n    .attr('class', 'axis y-axis')\n    .call(yAxis)\n    .lower()\n\n  d3.select('.y-axis .domain').remove()\n\n  var xAxis = d3.axisBottom(xPositionScale).ticks(7)\n\n  svg\n    .append('g')\n    .attr('class', 'axis x-axis')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(xAxis)\n}\n"]}